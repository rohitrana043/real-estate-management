spring:
  application:
    name: service-registry
  security:
    user:
      name: ${EUREKA_USERNAME}
      password: ${EUREKA_PASSWORD}

eureka:
  server:
    enableSelfPreservation: true
    renewalPercentThreshold: 0.85
    responseCacheUpdateIntervalMs: 3000
    responseCacheAutoExpirationInSeconds: 180
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_PEER_URLS}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}:${random.uuid}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    secure-port-enabled: true
    non-secure-port-enabled: false
    securePort: ${server.port}
    statusPageUrl: https://${eureka.instance.hostname}/actuator/info
    healthCheckUrl: https://${eureka.instance.hostname}/actuator/health
    homePageUrl: https://${eureka.instance.hostname}/

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
  metrics:
    tags:
      application: ${spring.application.name}
      instance_id: ${eureka.instance.instanceId}
    export:
      prometheus:
        enabled: true
        step: 1m