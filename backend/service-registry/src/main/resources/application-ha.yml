spring:
  application:
    name: service-registry-${EUREKA_NODE_ID:node1}
  security:
    user:
      name: ${EUREKA_USERNAME}
      password: ${EUREKA_PASSWORD}

eureka:
  server:
    enableSelfPreservation: true
    renewalPercentThreshold: 0.85
    responseCacheUpdateIntervalMs: 3000
    responseCacheAutoExpirationInSeconds: 180
    peerEurekaNodesUpdateIntervalMs: 30000
    numberRegistrySyncRetries: 5
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_PEER_URLS}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}
    preferIpAddress: false
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadataMap:
      nodeId: ${EUREKA_NODE_ID:node1}
      zone: ${EUREKA_ZONE:zone1}

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
  metrics:
    tags:
      node_id: ${EUREKA_NODE_ID:node1}
      zone: ${EUREKA_ZONE:zone1}
    export:
      prometheus:
        enabled: true
        step: 1m

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/eureka/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7