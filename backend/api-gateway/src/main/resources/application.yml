server:
  port: 8080

spring:
  application:
    name: api-gateway
  data:
    redis:
      host: localhost
      port: 6379
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      default-filters:
        #        - RemoveRequestHeader=Cookie # Security measure
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: 'http://localhost:3000'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - HEAD
            allowedHeaders: '*'
            exposedHeaders:
              - Authorization
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
            allowCredentials: true
            maxAge: 3600

jwt:
  secret: yoursecret
  expiration: 900000 # 24 hours in milliseconds
  refresh:
    expiration: 604800000 # 7 days

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 5000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      propertyCircuitBreaker:
        baseConfig: default
      userCircuitBreaker:
        baseConfig: default
      transactionCircuitBreaker:
        baseConfig: default
      analyticsCircuitBreaker:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 3s
    instances:
      propertyCircuitBreaker:
        baseConfig: default
      userCircuitBreaker:
        baseConfig: default
      transactionCircuitBreaker:
        baseConfig: default
      analyticsCircuitBreaker:
        baseConfig: default

eureka:
  client:
    serviceUrl:
      defaultZone: http://admin:admin123@localhost:8761/eureka/
    fetchRegistry: true
    registerWithEureka: true
  instance:
    preferIpAddress: false
    instance-id: ${spring.application.name}:${random.uuid}

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

# Add to application.yml
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: DEBUG
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: DEBUG
    org.springframework.cloud.gateway.filter.factory: DEBUG
    org.springframework.cloud.gateway.filter: DEBUG
    reactor.netty: DEBUG
    # Custom loggers
    com.realestate.gateway: DEBUG
    com.realestate.gateway.filter: DEBUG
